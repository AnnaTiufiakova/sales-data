CREATE DATABASE SALES_DATA;
CREATE SCHEMA SALES_DATA_SCHEMA;

-- it is required to create an externar stage in order to communicate with other public cloud areas
CREATE OR REPLACE STORAGE INTEGRATION aws_s3_integration
type = external_stage
storage_provider = 'S3'
enabled = true --storage integration is immediately active and usable once itâ€™s created
storage_aws_role_arn = 'arn:aws:iam::916450737010:role/sales-data-2016-2018'
storage_allowed_locations = ('s3://sales-data-2016-2018/')
;

SHOW INTEGRATIONS;
DESC INTEGRATION aws_s3_integration;

--STORAGE_AWS_IAM_USER_ARN generated by snowflake to communicate back to aws 
--STORAGE_AWS_EXTERNAL_ID generated by snowflake 
GRANT USAGE ON INTEGRATION aws_s3_integration TO ROLE accountadmin;

CREATE OR REPLACE FILE FORMAT sales_data_format
type = 'CSV'
field_delimiter = ','
skip_header = 1
timestamp_format = 'MM/DD/YYYY HH24:MI';

--creating an external stage
CREATE OR REPLACE STAGE aws_stage
storage_integration = aws_s3_integration
file_format = sales_data_format
url = 's3://sales-data-2016-2018/';

--to check the list of the available files
LIST @aws_stage;

GRANT USAGE ON STAGE aws_stage TO ROLE accountadmin;

SHOW STAGES LIKE '%aws_stage%';

LIST @aws_stages/orders/;


CREATE OR REPLACE TABLE orders (
order_id string,
customer_id string,
order_status string,
order_purchase_timestamp timestamp_ntz,
order_approved_at timestamp_ntz,
order_delivered_carrier_date timestamp_ntz,
order_delivered_customer_date timestamp_ntz,
order_estimated_delivery_date timestamp_ntz
load_date date
);


COPY INTO orders
FROM @aws_stage/orders/orders_20250717.csv
file_format = (format_name=sales_data_format);

SELECT * from orders LIMIT 10;
